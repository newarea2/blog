import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,d as e}from"./app-72775176.js";const i={},c=e(`<h1 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h1><h2 id="_1-含义" tabindex="-1"><a class="header-anchor" href="#_1-含义" aria-hidden="true">#</a> 1 含义</h2><p>p<wbr>rocess.env 属性返回一个包含用户环境信息的对象，该对象中的属性都是<strong>环境变量</strong>。如在 Windows 中打印 p<wbr>rocess.env，<code>console.log(p<wbr>rocess.env)</code>，返回的信息如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token constant">USERNAME</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 用户名</span>
  <span class="token constant">PWD</span><span class="token operator">:</span> <span class="token string">&#39;E:/01-front-end/test/30tailwindcss/tailwind-test&#39;</span> <span class="token comment">// 当前目录</span>
  <span class="token constant">OS</span><span class="token operator">:</span> <span class="token string">&#39;Windows_NT&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 操作系统</span>
  <span class="token constant">PATH</span><span class="token operator">:</span> <span class="token string">&#39;...&#39;</span> <span class="token comment">// 一个可执行程序的目录集合</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>process 是 Node 中的一个全局变量，可以直接使用，无需使用 require()。</p><h2 id="_2-配置环境变量" tabindex="-1"><a class="header-anchor" href="#_2-配置环境变量" aria-hidden="true">#</a> 2 配置环境变量</h2><h3 id="_2-1-windows-系统" tabindex="-1"><a class="header-anchor" href="#_2-1-windows-系统" aria-hidden="true">#</a> 2.1 Windows 系统</h3><h4 id="_2-1-1-临时配置" tabindex="-1"><a class="header-anchor" href="#_2-1-1-临时配置" aria-hidden="true">#</a> 2.1.1 临时配置</h4><p>打开一个 cmd 窗口，</p><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230719/16.png" alt="01" tabindex="0" loading="lazy"><figcaption>01</figcaption></figure><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230719/17.png" alt="02" tabindex="0" loading="lazy"><figcaption>02</figcaption></figure><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230719/19.png" alt="04" tabindex="0" loading="lazy"><figcaption>04</figcaption></figure><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230719/20.png" alt="05" tabindex="0" loading="lazy"><figcaption>05</figcaption></figure><p>另外再打开一个 cmd 窗口，查看环境变量 HELLO，发现并不存在，说明上述设置方式是<strong>临时的</strong>。</p><p>此时新建一个文件 test.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行 <code>node test.js</code>，打印的对象中包含属性 HELLO。</p><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230719/18.png" alt="03" tabindex="0" loading="lazy"><figcaption>03</figcaption></figure><h4 id="_2-1-2-永久配置" tabindex="-1"><a class="header-anchor" href="#_2-1-2-永久配置" aria-hidden="true">#</a> 2.1.2 永久配置</h4><p>右键(此电脑) -&gt; 属性(R) -&gt; 高级系统设置 -&gt; 环境变量(N)...</p><h3 id="_2-2-linux-系统" tabindex="-1"><a class="header-anchor" href="#_2-2-linux-系统" aria-hidden="true">#</a> 2.2 Linux 系统</h3><h4 id="_2-2-1-临时配置" tabindex="-1"><a class="header-anchor" href="#_2-2-1-临时配置" aria-hidden="true">#</a> 2.2.1 临时配置</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#node中常用的到的环境变量是NODE_ENV，首先查看是否存在</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$NODE_ENV</span>
<span class="token comment">#如果不存在则添加环境变量</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>production
<span class="token comment">#环境变量追加值</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">path</span><span class="token operator">=</span><span class="token variable">$path</span>:/home/download:/usr/local/
<span class="token comment">#某些时候需要删除环境变量</span>
<span class="token builtin class-name">unset</span> NODE_ENV
<span class="token comment">#某些时候需要显示所有的环境变量</span>
<span class="token function">env</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-2-永久配置" tabindex="-1"><a class="header-anchor" href="#_2-2-2-永久配置" aria-hidden="true">#</a> 2.2.2 永久配置</h4><p>打开配置文件所在</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 所有用户都生效</span>
<span class="token function">vim</span> /etc/profile
<span class="token comment"># 当前用户生效</span>
<span class="token function">vim</span> ~/.bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在文件末尾添加类似如下语句进行环境变量的设置或修改</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在文件末尾添加如下格式的环境变量</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">path</span><span class="token operator">=</span><span class="token variable">$path</span>:/home/download:/usr/local/
<span class="token builtin class-name">export</span> NODE_ENV <span class="token operator">=</span> product
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后修改完成后需要运行如下语句令系统重新加载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 修改/etc/profile文件后</span>
<span class="token builtin class-name">source</span> /etc/profile
<span class="token comment"># 修改~/.bash_profile文件后</span>
<span class="token builtin class-name">source</span> ~/.bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),t=[c];function l(o,p){return a(),s("div",null,t)}const u=n(i,[["render",l],["__file","env.html.vue"]]);export{u as default};
