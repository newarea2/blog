import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as p,b as n,d as c,f as o,a as l}from"./app-90f462c1.js";const i={},u=n("p",null,"EJS",-1),d={href:"https://www.cnblogs.com/leolovexx/p/5594371.html",target:"_blank",rel:"noopener noreferrer"},r=l(`<p>用法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> template <span class="token operator">=</span> ejs<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">template</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; 输出渲染后的 HTML 字符串</span>

ejs<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> data<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; 输出渲染后的 HTML 字符串</span>

ejs<span class="token punctuation">.</span><span class="token function">renderFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> data<span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// str =&gt; 输出渲染后的 HTML 字符串</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|-- ejs-test
    |-- index.js
    |-- views
        |-- index.ejs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-常用标签说明" tabindex="-1"><a class="header-anchor" href="#_1-常用标签说明" aria-hidden="true">#</a> 1 常用标签说明</h2><h3 id="_1-1" tabindex="-1"><a class="header-anchor" href="#_1-1" aria-hidden="true">#</a> 1.1 <code>&lt;%#</code></h3><p>注释标签，不执行、不输出内容</p><p>index.ejs</p><div class="language-ejs line-numbers-mode" data-ext="ejs"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token comment"># 这是段注释 </span><span class="token delimiter punctuation">%&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2" tabindex="-1"><a class="header-anchor" href="#_1-2" aria-hidden="true">#</a> 1.2 <code>&lt;%</code></h3><p>&#39;脚本&#39; 标签，用于流程控制，无输出</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> ejs <span class="token keyword">from</span> <span class="token string">&#39;ejs&#39;</span>

ejs<span class="token punctuation">.</span><span class="token function">renderFile</span><span class="token punctuation">(</span><span class="token string">&#39;./views/index.ejs&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>index.ejs</p><div class="language-ejs line-numbers-mode" data-ext="ejs"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>
        hello
    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230719/04.png" alt="04" tabindex="0" loading="lazy"><figcaption>04</figcaption></figure><h3 id="_1-3-、" tabindex="-1"><a class="header-anchor" href="#_1-3-、" aria-hidden="true">#</a> 1.3 <code>&lt;%%</code>、<code>%%&gt;</code></h3><p><code>&lt;%%</code> 输出字符串 &#39;&lt;%&#39;，<code>%%&gt;</code> 输出字符串 &#39;%&gt;&#39;。若想输出 <code>&lt;%</code>，如果直接在模板中写 <code>&lt;%</code>，执行 <code>node index.js</code> 会报错，原因是解析模板时，ejs 把 <code>&lt;%</code> 当中一个开始标签，但是没有找到对应的结束标签，所以报错</p><p>错误的方式：</p><p>index.ejs</p><div class="language-ejs line-numbers-mode" data-ext="ejs"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    &lt;%
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正确的方式：</p><p>index.ejs</p><div class="language-ejs line-numbers-mode" data-ext="ejs"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    &lt;%%
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-、" tabindex="-1"><a class="header-anchor" href="#_1-4-、" aria-hidden="true">#</a> 1.4 <code>&lt;%=</code>、<code>&lt;%-</code></h3><p>有些字符（如 <code>&lt;</code>、<code>&gt;</code>）在模板中有特殊的含义，如果 data 中的属性值包含这些特殊字符，<code>&lt;%=</code>、<code>&lt;%-</code>对它们的处理是不一样的</p><ul><li><code>&lt;%=</code> 会对特殊字符进行转义，如在解析后的结果中 <code>&lt;</code> 变成了 <code>&amp;gt;</code></li><li><code>&lt;%-</code> 输出非转义的数据到模板，如在解析后的结果中 <code>&lt;</code> 还是 <code>&lt;</code></li></ul><p>index.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> ejs <span class="token keyword">from</span> <span class="token string">&#39;ejs&#39;</span>

ejs<span class="token punctuation">.</span><span class="token function">renderFile</span><span class="token punctuation">(</span><span class="token string">&#39;./views/index.ejs&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;&lt;&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>index.ejs</p><div class="language-ejs line-numbers-mode" data-ext="ejs"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> message </span><span class="token delimiter punctuation">%&gt;</span></span>
    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> message </span><span class="token delimiter punctuation">%&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230719/01.png" alt="01" tabindex="0" loading="lazy"><figcaption>01</figcaption></figure><h3 id="_1-5-、" tabindex="-1"><a class="header-anchor" href="#_1-5-、" aria-hidden="true">#</a> 1.5 <code>-%&gt;</code>、<code>_%&gt;</code></h3><p>模板一般写在后缀为 <code>ejs</code> 的文件中，默认情况下模板中的空格、换行会被原样输出</p><ul><li><code>-%&gt;</code> 将结束标签后面的空格符删除</li><li><code>_%&gt;</code> 删除紧随其后的换行符</li></ul><p>index.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> ejs <span class="token keyword">from</span> <span class="token string">&#39;ejs&#39;</span>

ejs<span class="token punctuation">.</span><span class="token function">renderFile</span><span class="token punctuation">(</span><span class="token string">&#39;./views/index.ejs&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>index.ejs</p><div class="language-ejs line-numbers-mode" data-ext="ejs"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> message </span><span class="token delimiter punctuation">%&gt;</span></span>   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> message </span><span class="token delimiter punctuation">%&gt;</span></span>
    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> message </span><span class="token delimiter punctuation">-%&gt;</span></span>   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> message </span><span class="token delimiter punctuation">%&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230719/02.png" alt="02" tabindex="0" loading="lazy"><figcaption>02</figcaption></figure><p>index.ejs</p><div class="language-ejs line-numbers-mode" data-ext="ejs"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> message </span><span class="token delimiter punctuation">%&gt;</span></span>
    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> message </span><span class="token delimiter punctuation">%&gt;</span></span>
    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> message </span><span class="token delimiter punctuation">_%&gt;</span></span>
    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> message </span><span class="token delimiter punctuation">%&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230719/03.png" alt="03" tabindex="0" loading="lazy"><figcaption>03</figcaption></figure><p>备注：打印结果中最后一个 <code>hello</code> 前存在空格的原因是模板中最后的 <code>&lt;%= message %&gt;</code>前不仅有换行，还有空格，<code>-%&gt;</code>只是去掉了换行，空格会被保留</p>`,42);function k(g,v){const s=e("ExternalLinkIcon");return t(),p("div",null,[u,n("p",null,[n("a",d,[c("EJS 是什么 ，怎么用，以及优点"),o(s)])]),r])}const j=a(i,[["render",k],["__file","EJS.html.vue"]]);export{j as default};
