import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as l,c as p,b as a,d as o,f as i,a as s}from"./app-90f462c1.js";const r={},c=s(`<h1 id="常用配置选项" tabindex="-1"><a class="header-anchor" href="#常用配置选项" aria-hidden="true">#</a> 常用配置选项</h1><p>Prettier 的配置选项不多，并且官方也不在打算新增新选项。</p><p>以下测试实例采用了“控制变量法”。</p><h2 id="_1-global" tabindex="-1"><a class="header-anchor" href="#_1-global" aria-hidden="true">#</a> 1 Global</h2><h3 id="_1-1-tabwidth" tabindex="-1"><a class="header-anchor" href="#_1-1-tabwidth" aria-hidden="true">#</a> 1.1 tabWidth</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">指定缩进的长度</td><td style="text-align:left;">2</td><td style="text-align:left;"></td></tr></tbody></table><ul><li><p><code>2</code>（默认、推荐）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>3</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_1-2-parser" tabindex="-1"><a class="header-anchor" href="#_1-2-parser" aria-hidden="true">#</a> 1.2 parser</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">指定使用哪一种解析器</td><td style="text-align:left;">无</td><td style="text-align:left;">Prettier 会自动从输入文件路径推断解析器，因此您不必更改此设置。</td></tr></tbody></table><h3 id="_1-3-printwidth" tabindex="-1"><a class="header-anchor" href="#_1-3-printwidth" aria-hidden="true">#</a> 1.3 printWidth</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">一行最多多少个字符</td><td style="text-align:left;">80，推荐设置为120</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="_1-4-usetabs" tabindex="-1"><a class="header-anchor" href="#_1-4-usetabs" aria-hidden="true">#</a> 1.4 useTabs</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">缩进是否使用 tab</td><td style="text-align:left;">false（推荐）</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="_1-5-requirepragma" tabindex="-1"><a class="header-anchor" href="#_1-5-requirepragma" aria-hidden="true">#</a> 1.5 requirePragma</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">是否仅格式化文件顶部包含特殊注释（称为 pragma）的文件</td><td style="text-align:left;">false（推荐）</td><td style="text-align:left;"></td></tr></tbody></table><h2 id="_2-common" tabindex="-1"><a class="header-anchor" href="#_2-common" aria-hidden="true">#</a> 2 Common</h2><h2 id="_3-javascript" tabindex="-1"><a class="header-anchor" href="#_3-javascript" aria-hidden="true">#</a> 3 JavaScript</h2><h3 id="_3-1-singlequote" tabindex="-1"><a class="header-anchor" href="#_3-1-singlequote" aria-hidden="true">#</a> 3.1 singleQuote</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">是否使用单引号</td><td style="text-align:left;">false，即默认使用双引号</td><td style="text-align:left;"></td></tr></tbody></table><ul><li><p><code>false</code>（默认）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>true</code> （推荐）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_3-2-semi" tabindex="-1"><a class="header-anchor" href="#_3-2-semi" aria-hidden="true">#</a> 3.2 semi</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">是否在末尾加分号</td><td style="text-align:left;">true，即默认在末尾加分号</td><td style="text-align:left;"></td></tr></tbody></table><ul><li><p><code>true</code>（默认）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>false</code> （推荐）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_3-3-bracketspacing" tabindex="-1"><a class="header-anchor" href="#_3-3-bracketspacing" aria-hidden="true">#</a> 3.3 bracketSpacing</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">在对象自面量的大括号（即<code>{</code>、<code>}</code>）前后输出空格</td><td style="text-align:left;">true</td><td style="text-align:left;"></td></tr></tbody></table><ul><li><p><code>true</code>（默认、推荐）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>false</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_3-4-trailingcomma" tabindex="-1"><a class="header-anchor" href="#_3-4-trailingcomma" aria-hidden="true">#</a> 3.4 trailingComma</h3>`,27),d={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas#trailing_commas_in_functions",target:"_blank",rel:"noopener noreferrer"},u=s(`<table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">是否在多行以逗号分隔的句法结构中输入尾逗号</td><td style="text-align:left;">ES5</td><td style="text-align:left;"></td></tr></tbody></table><ul><li><p><code>none</code>（推荐）无尾随逗号</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>es5</code>（默认 ）添加ES5中被支持的尾逗号（如多行对象、数组）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>all</code> 所有可能的地方都添加（包括函数的参数定义、函数调用）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3-5-arrowparens" tabindex="-1"><a class="header-anchor" href="#_3-5-arrowparens" aria-hidden="true">#</a> 3.5 arrowParens</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">是否给单个参数的箭头函数参数部分添加括号</td><td style="text-align:left;">always</td><td style="text-align:left;"></td></tr></tbody></table><ul><li><p><code>always</code>（默认、推荐）总是包含括号</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>avoid</code> 忽略括号</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_3-6-quoteprops" tabindex="-1"><a class="header-anchor" href="#_3-6-quoteprops" aria-hidden="true">#</a> 3.6 quoteProps</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">对象属性名加引号的规则</td><td style="text-align:left;"><code>as-needed</code></td><td style="text-align:left;"></td></tr></tbody></table><ul><li><p><code>as-needed</code>（默认、推荐） 在需要引号的对象属性上添加引号</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;foo-bar&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token comment">// 以横杠相连命令的对象属性，需要加引号</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;foo-bar&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>consistent</code> <strong>如果对象中有一个属性有引号，则都加上引号</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;foo-bar&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;foo-bar&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>preserve</code> 在符合语法的情况下，输入什么样最终展示的就是什么样</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;foo-bar&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;foo-bar&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_4-html" tabindex="-1"><a class="header-anchor" href="#_4-html" aria-hidden="true">#</a> 4 HTML</h2><h3 id="_4-1-bracketsameline" tabindex="-1"><a class="header-anchor" href="#_4-1-bracketsameline" aria-hidden="true">#</a> 4.1 bracketSameLine</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">在对象自面量的大括号（即<code>{</code>、<code>}</code>）前后输出空格</td><td style="text-align:left;">true</td><td style="text-align:left;"></td></tr></tbody></table><ul><li><p><code>true</code>（默认、推荐）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>false</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_4-2-htmlwhitespacesensitivity" tabindex="-1"><a class="header-anchor" href="#_4-2-htmlwhitespacesensitivity" aria-hidden="true">#</a> 4.2 htmlWhitespaceSensitivity</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">指定HTML, Vue, Angular, and Handlebars文件空格敏感性</td><td style="text-align:left;">css</td><td style="text-align:left;">css 遵循 CSS <code>display</code> 属性默认值 <br></td></tr></tbody></table><ul><li>css 遵循 CSS <code>display</code> 属性默认值</li><li>strict 空格敏感</li><li>ignore 空格不敏感</li></ul><h2 id="_5-special" tabindex="-1"><a class="header-anchor" href="#_5-special" aria-hidden="true">#</a> 5 Special</h2><h2 id="_6-range" tabindex="-1"><a class="header-anchor" href="#_6-range" aria-hidden="true">#</a> 6 range</h2><p>指定文件需要代码格式的范围</p><table><thead><tr><th style="text-align:left;">选项</th><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">rangeStart</td><td style="text-align:left;">开始位置</td><td style="text-align:left;"><code>0</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">rangeEnd</td><td style="text-align:left;">结束位置</td><td style="text-align:left;"><code>Infinity</code></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="_7-vue" tabindex="-1"><a class="header-anchor" href="#_7-vue" aria-hidden="true">#</a> 7 Vue</h2><h3 id="_7-1-vueindentscriptandstyle" tabindex="-1"><a class="header-anchor" href="#_7-1-vueindentscriptandstyle" aria-hidden="true">#</a> 7.1 vueIndentScriptAndStyle</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">Vue 单文件组件中 script 和 style 标签内代码是否缩进</td><td style="text-align:left;">false</td><td style="text-align:left;"></td></tr></tbody></table><ul><li><p><code>false</code>（默认）不缩进</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> msg <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>style scoped lang<span class="token operator">=</span><span class="token string">&quot;scss&quot;</span><span class="token operator">&gt;</span>
p <span class="token punctuation">{</span>
  font<span class="token operator">-</span>size<span class="token operator">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>true</code>（推荐）缩进</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> msg <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">p</span> <span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_8-react" tabindex="-1"><a class="header-anchor" href="#_8-react" aria-hidden="true">#</a> 8 React</h2><h3 id="_8-1-jsxsinglequote" tabindex="-1"><a class="header-anchor" href="#_8-1-jsxsinglequote" aria-hidden="true">#</a> 8.1 jsxSingleQuote</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">JSX 中是否使用单引号</td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;"></td></tr></tbody></table><ul><li><p><code>false</code>（默认、推荐）使用双引号</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">HelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;hello&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>true</code> 使用单引号</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">HelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;hello&#39;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_9-other" tabindex="-1"><a class="header-anchor" href="#_9-other" aria-hidden="true">#</a> 9 Other</h2><h3 id="_9-1-endofline" tabindex="-1"><a class="header-anchor" href="#_9-1-endofline" aria-hidden="true">#</a> 9.1 endOfLine</h3><p>在文件结尾插入空行</p><h3 id="_9-2-prosewrap" tabindex="-1"><a class="header-anchor" href="#_9-2-prosewrap" aria-hidden="true">#</a> 9.2 proseWrap</h3><table><thead><tr><th style="text-align:left;">含义</th><th style="text-align:left;">默认值</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">指定文件折行方式</td><td style="text-align:left;"><code>preserve</code></td><td style="text-align:left;"></td></tr></tbody></table><ul><li>always 当超过 printWidth 折行</li><li>never 不折行</li><li>preserve 按照文件原样折行</li></ul>`,33);function k(v,h){const t=e("ExternalLinkIcon");return l(),p("div",null,[c,a("p",null,[a("a",d,[o("什么是尾逗号（Trailing commas）"),i(t)])]),u])}const m=n(r,[["render",k],["__file","config-option.html.vue"]]);export{m as default};
