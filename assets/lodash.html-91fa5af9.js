import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,a as n}from"./app-90f462c1.js";const o={},c=n(`<h1 id="lodash" tabindex="-1"><a class="header-anchor" href="#lodash" aria-hidden="true">#</a> Lodash</h1><p>lodash 和 lodash-es 区别</p><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><p>uniq</p><p>remove</p><h2 id="语言" tabindex="-1"><a class="header-anchor" href="#语言" aria-hidden="true">#</a> 语言</h2><p><code>isPlainObject</code> 和 <code>isObject</code></p><p><code>isFunction</code></p><p><code>isBoolean</code></p><p><code>cloneDeep</code> 深拷贝和浅拷贝的区别</p><p><code>isEmpty</code></p><p>之前判断一个空对象（<code>{}</code>）是这样写：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> isEmpty <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>isNil</code></p><p>检查值是否为 <code>null</code> 或 <code>undefined</code>。</p><p><code>isNull</code></p><p>检查值是否为 <code>null</code>。</p><h2 id="对象" tabindex="-1"><a class="header-anchor" href="#对象" aria-hidden="true">#</a> 对象</h2><p>pick</p><p>omit</p>`,20),p=[c];function d(t,i){return a(),s("div",null,p)}const h=e(o,[["render",d],["__file","lodash.html.vue"]]);export{h as default};
