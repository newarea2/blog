import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c,e as s,d as i,a as e,b as a}from"./app-72775176.js";const l={},o=i(`<h1 id="git-分支管理策略" tabindex="-1"><a class="header-anchor" href="#git-分支管理策略" aria-hidden="true">#</a> git 分支管理策略</h1><h2 id="一、主分支master" tabindex="-1"><a class="header-anchor" href="#一、主分支master" aria-hidden="true">#</a> 一、主分支master</h2><p>代码库应该有且只有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。</p><p>Git主分支的名字，默认叫做<code>master</code>。它是自动建立的，版本库初始化以后，默认就是在主分支上进行开发。</p><h2 id="二、开发分支dev" tabindex="-1"><a class="header-anchor" href="#二、开发分支dev" aria-hidden="true">#</a> 二、开发分支dev-*</h2><p><code>master</code>分支是最稳定、最安全的分支，是现网环境运行的代码分支，一般不能直接在该分支上编写代码（万一改出问题那就麻烦了）。</p><p>日常开发应该在另一条分支上完成，我们把开发用的分支，叫做<code>dev-*</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建dev-20190331分支</span>
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> dev-20190331 master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、预发布分支release" tabindex="-1"><a class="header-anchor" href="#三、预发布分支release" aria-hidden="true">#</a> 三、预发布分支release-*</h2><p>当<code>dev-*</code>分支上的功能任务开发完，需要测试人员测试时，此时从<code>dev-*</code>上新建对应<code>release-*</code>分支，用于构建测试环境使用的git分支，通过测试后，将<code>release-*</code>分支合并到<code>master</code>分支。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#创建release-20190331分支</span>
<span class="token function">git</span> checkout <span class="token parameter variable">-b</span> release-21090331 dev-20190331
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 切换到master分支</span>
<span class="token function">git</span> checkout master

<span class="token comment"># 对release-20190331分支进行合并</span>
<span class="token function">git</span> merge --no-ff release-20190331
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、重点" tabindex="-1"><a class="header-anchor" href="#四、重点" aria-hidden="true">#</a> 四、重点</h2><p>1 以开发新功能为例，讲解git流程</p><ul><li>现在需要开发一个新功能，如添加一个“账户管理模块”，且该功能评估完成时间是2019年3月31号，从<code>master</code>分支新建分支<code>dev-20190331</code>；</li><li>当“账户管理模块”开发完成后，从<code>dev-20190331</code>分支上新建<code>release-20190331</code>分支用于构建测试环境（分支名称必须跟dev-20190331对应，表示该release分支是用于测试对应dev分支）；</li><li>测试过程可能会发现“账户管理模块”未达到原型需求或者有bug，此时应在<code>dev-20190331</code>分支上修改代码，然后合并到<code>release-20190331</code>分支 → 重新构建测试环境 → 再测试验证。直至开发的“账户管理模块”符合原型需求且没有bug，确认没问题后，合并到master分支；</li><li>发版master分支；</li></ul>`,15),t=e("p",null,[a("2 随着项目不断的开发，"),e("code",null,"dev-*"),a("和"),e("code",null,"release-*"),a("分支会越来越多，应该定期清理（注意，在删除分支之前应该确保该分支作用已经完成）")],-1),r=e("p",null,"3 开发某种特定功能、新需求、优化，分支方向是：",-1);function m(h,p){return n(),c("div",null,[o,s(' ![git流程图](..https://blog-1320825986.cos.ap-nanjing.myqcloud.com/gitFlow01.jpg "图1") '),t,r,s(' ![git流程图](..https://blog-1320825986.cos.ap-nanjing.myqcloud.com/gitFlow02.jpg "图2") ')])}const g=d(l,[["render",m],["__file","git-flow1.html.vue"]]);export{g as default};
