import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c,a,b as n,f as o,d as s}from"./app-f1b20077.js";const i={},u=s(`<h1 id="textarea-换行" tabindex="-1"><a class="header-anchor" href="#textarea-换行" aria-hidden="true">#</a> textarea 换行</h1><h2 id="_1-placeholder-显示换行" tabindex="-1"><a class="header-anchor" href="#_1-placeholder-显示换行" aria-hidden="true">#</a> 1 placeholder 显示换行</h2><h3 id="_1-1-通过-10" tabindex="-1"><a class="header-anchor" href="#_1-1-通过-10" aria-hidden="true">#</a> 1.1 通过<code>&amp;#10;</code></h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>这是<span class="token entity" title="
">&amp;#10;</span>一段<span class="token entity" title="
">&amp;#10;</span>测试<span class="token entity" title="
">&amp;#10;</span>文本<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-2-vue-项目" tabindex="-1"><a class="header-anchor" href="#_1-2-vue-项目" aria-hidden="true">#</a> 1.2 vue 项目</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>项目特色：<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>characteristic<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span>
        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textarea<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>formData.characteristic<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type !== &#39;detail&#39;<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">:placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>请输入项目特色\\r\\n请输入项目特色&#39;<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">clearable</span>
      <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-else</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>formData.characteristic<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-textarea-内容显示在html页面上换行" tabindex="-1"><a class="header-anchor" href="#_2-textarea-内容显示在html页面上换行" aria-hidden="true">#</a> 2 textarea 内容显示在html页面上换行</h2><p>1 在 HTML 的 textarea 控件中输入回车并提交会发现，内容中的换行是用 \\n 或 \\r\\n 表示（取决于浏览器和操作系统）。如果我们直接将这个内容显示在 html 页面上，那么文字是不会像输入时的那样换行的。<br> 同样的，在 textarea 中连续敲多个空格，这些内容如果直接显示在 html 页面就会变成一个空格。为了正确显示，我们需要将内容做个转换。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//原始字符串</span>
<span class="token keyword">var</span> string <span class="token operator">=</span> <span class="token string">&quot;欢迎访问!\\r\\nhangge.com    做最好的开发者知识平台&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//替换所有的换行符</span>
string <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\r\\n|\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;br/&gt;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">//替换所有的空格（中文空格、英文空格都会被替换）</span>
string <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&amp;nbsp;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">//输出转换后的字符串</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token comment">// &#39;欢迎访问!&lt;br/&gt;hangge.com&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;做最好的开发者知识平台&#39;，若vue项目，可通过v-html展示该文本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2 有时需要去掉所有回车、换行、空格，这个原理同上面一样，也是通过正则替换来实现。只不过将匹配到的内容替换成空字符串</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//原始字符串</span>
<span class="token keyword">var</span> string <span class="token operator">=</span> <span class="token string">&quot;欢迎访问!\\r\\nhangge.com    做最好的开发者知识平台&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//去掉所有的换行符、空格</span>
string <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\r\\n|\\n|\\s</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">//输出转换后的字符串</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token comment">// 欢迎访问!hangge.com做最好的开发者知识平台</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3 有时需要将<code>&lt;br/&gt;</code>、<code>&amp;nbsp;</code>转成回车换行、空格</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//原始字符串</span>
<span class="token keyword">var</span> string <span class="token operator">=</span> <span class="token string">&#39;欢迎访问!&lt;br/&gt;hangge.com&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;做最好的开发者知识平台&#39;</span>

<span class="token comment">//替换所有的换行符</span>
string <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\&lt;br\\/\\&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>

<span class="token comment">//替换所有的空格（中文空格、英文空格都会被替换）</span>
string <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;nbsp;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>

<span class="token comment">//输出转换后的字符串</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token comment">// &#39;欢迎访问!\\r\\nhangge.com    做最好的开发者知识平台&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4 通过<code>style=&quot;white-space: pre-line;&quot;</code>，合并空白，但是保留换行</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textarea<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>textareaValue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>printFunc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>打印textareaValue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">white-space</span><span class="token punctuation">:</span> pre-line<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>{{textareaValue}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">textareaValue</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">printFunc</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>textareaValue<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\r\\n|\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;aaaa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-html字符实体和js转义字符" tabindex="-1"><a class="header-anchor" href="#_3-html字符实体和js转义字符" aria-hidden="true">#</a> 3 html字符实体和js转义字符</h2><h3 id="_3-1-html字符实体" tabindex="-1"><a class="header-anchor" href="#_3-1-html字符实体" aria-hidden="true">#</a> 3.1 html字符实体</h3>`,17),r=a("code",null,"<",-1),d=a("code",null,">",-1),k=a("br",null,null,-1),g={href:"http://www.w3school.com.cn/html/html_entities.asp",target:"_blank",rel:"noopener noreferrer"},m=s('<table><thead><tr><th style="text-align:left;">显示结果</th><th style="text-align:left;">描述</th><th style="text-align:left;">实体名称</th><th style="text-align:left;">实体编号</th></tr></thead><tbody><tr><td style="text-align:left;"></td><td style="text-align:left;">空格</td><td style="text-align:left;"><code>&amp;nbsp;</code></td><td style="text-align:left;"><code>&amp;#160;</code></td></tr><tr><td style="text-align:left;"><code>&lt;</code></td><td style="text-align:left;">小于号</td><td style="text-align:left;"><code>&amp;lt;</code></td><td style="text-align:left;"><code>&amp;#60;</code></td></tr><tr><td style="text-align:left;"><code>&gt;</code></td><td style="text-align:left;">大于号</td><td style="text-align:left;"><code>&amp;gt;</code></td><td style="text-align:left;"><code>&amp;#62;</code></td></tr></tbody></table><h3 id="_3-2-js转义字符" tabindex="-1"><a class="header-anchor" href="#_3-2-js转义字符" aria-hidden="true">#</a> 3.2 js转义字符</h3><p>除了普通的可打印字符以外，一些特殊有特殊功能的字符，如单双引号、换行、回车，可以通过转义字符的形式放入字符串中，使用较多的js转义字符有</p><table><thead><tr><th style="text-align:left;">转义字符</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>\\0</code></td><td style="text-align:left;">空字符</td></tr><tr><td style="text-align:left;"><code>\\&#39;</code></td><td style="text-align:left;">单引号</td></tr><tr><td style="text-align:left;"><code>\\&quot;</code></td><td style="text-align:left;">双引号</td></tr><tr><td style="text-align:left;"><code>\\\\</code></td><td style="text-align:left;">反斜杠</td></tr><tr><td style="text-align:left;"><code>\\n</code></td><td style="text-align:left;">换行</td></tr><tr><td style="text-align:left;"><code>\\r</code></td><td style="text-align:left;">回车</td></tr></tbody></table>',4);function v(h,b){const t=p("ExternalLinkIcon");return l(),c("div",null,[u,a("p",null,[n("有些字符如"),r,n("、"),d,n("，因为浏览器会误认为它们是标签，使用较多的实体有"),k,n(" 参考"),a("a",g,[n("HTML 字符实体"),o(t)])]),m])}const y=e(i,[["render",v],["__file","escape.html.vue"]]);export{y as default};
