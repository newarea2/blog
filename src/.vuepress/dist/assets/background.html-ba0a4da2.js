import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as o,a as n,b as c,f as p,d as i}from"./app-f1b20077.js";const r={},l=i(`<h1 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h1><p>目录</p><ul><li><a href="#%E8%83%8C%E6%99%AF">背景</a><ul><li><a href="#1-background-size">1 background-size</a></li><li><a href="#2-background-position">2 background-position</a></li></ul></li></ul><h2 id="_1-background-size" tabindex="-1"><a class="header-anchor" href="#_1-background-size" aria-hidden="true">#</a> 1 background-size</h2><p>用于设置背景图像的尺寸，类似img元素的width和height属性。值可能是length|percentage|cover|contain。</p><p>值为length|percentage：<br> 第一个值是设置宽度，第二是设置高度，如果只设置一个值，则第二个值会被设置为auto（如果只设置一个值，即宽度，背景图像尺寸相对原图是等比例缩放的，这一点类似img、video元素）</p><p>值为cover|contain：<br> 相同点：背景图像都是等比例缩放<br> 不同点：<br> cover：缩放背景图片，使背景图像完全覆盖背景区域，图像的某些部分可能无法在背景区域中显示出来<br> contain：缩放背景图片，使背景区域能显示去完整的背景图像（一般使背景区域有些区域没有背景图像）</p><p>背景图像分为：<br> 比背景区域大的和比背景区域小的（即大图和小图）</p><p>cover原理：<br> 假设背景图像的宽高为x、y，背景区域的宽高为ax、by，设宽的变化速度为s（即每秒增加spx，如果是减小则s为负值），高的增长速度为h，等比例缩放则有</p><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230726/beijing01.png" alt="图1" tabindex="0" loading="lazy"><figcaption>图1</figcaption></figure><p>设x变化到ax的时间为t<sub>x</sub>，y变化到by的时间为t<sub>y</sub>，则有</p><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230726/beijing02.png" alt="图2" tabindex="0" loading="lazy"><figcaption>图2</figcaption></figure><p>通过上述计算可知，t<sub>x</sub>和t<sub>y</sub>的大小由a和b决定，即a和b哪个越小，相应的那个时间就越短。</p><p>背景图像何时铺满背景区域，取决于那个时间长的边。例如，如果a&gt;b，即背景区域宽方向被铺满的时间大于高方向，换句话讲，如果背景区域宽方向铺满了，则高方向一定已经铺满，从而整个背景区域被背景图像铺满。</p><p>我们的任务是等比例缩放背景图像，使其最终刚好铺满背景区域。</p><p>实际中我们知道的是背景图像的宽高为x、y，背景区域的宽高为m、n，现在比较m/x和n/y的大小，如果m/x &gt; n/y，则（因为是等比例缩放，现在背景图像的宽变成了m，那么高就成了(y*m)/x）</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.bg</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;&quot;</span><span class="token punctuation">)</span></span> no-repeat center<span class="token punctuation">;</span>
  <span class="token property">background-size</span><span class="token punctuation">:</span> m <span class="token punctuation">(</span>y*m<span class="token punctuation">)</span>/x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>反之，如果 m/x &lt; n/y，则</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.bg</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;&quot;</span><span class="token punctuation">)</span></span> no-repeat center<span class="token punctuation">;</span>
  <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>x*n<span class="token punctuation">)</span>/y n<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上原理虽然是background-size: cover;但同样可以用于video上。</p><h2 id="_2-background-position" tabindex="-1"><a class="header-anchor" href="#_2-background-position" aria-hidden="true">#</a> 2 background-position</h2><p>参考链接：</p>`,22),u={href:"https://blog.csdn.net/ixygj197875/article/details/79333151",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,"用了那么久的background-position，却没有真正弄明白它的含义",-1);function b(g,k){const a=e("ExternalLinkIcon");return t(),o("div",null,[l,n("ul",null,[n("li",null,[n("a",u,[c("CSS 背景位置 background-position属性"),p(a)])])]),d])}const v=s(r,[["render",b],["__file","background.html.vue"]]);export{v as default};
