const e=JSON.parse('{"key":"v-804d8b04","path":"/basis/typescript/import-require-for-importing-type-only.html","title":"import/require 仅仅是导入类型","lang":"zh-CN","frontmatter":{"description":"以下导入语法： ```ts import foo = require(\'foo\'); ``` 它实际上只做了两件事：\\r 导入 foo 模块的所有类型信息；; \\r 确定 foo 模块运行时的依赖关系。; 你可以选择仅加载类型信息，而没有运行时的依赖关系。 如果你没有把导入的名称当做变量声明空间来用，在编译成 JavaScript 时，导入的模块将会被完全...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/blog/basis/typescript/import-require-for-importing-type-only.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"import/require 仅仅是导入类型"}],["meta",{"property":"og:description","content":"以下导入语法： ```ts import foo = require(\'foo\'); ``` 它实际上只做了两件事：\\r 导入 foo 模块的所有类型信息；; \\r 确定 foo 模块运行时的依赖关系。; 你可以选择仅加载类型信息，而没有运行时的依赖关系。 如果你没有把导入的名称当做变量声明空间来用，在编译成 JavaScript 时，导入的模块将会被完全..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-09T14:41:52.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-09T14:41:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"import/require 仅仅是导入类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-09T14:41:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"例子 1","slug":"例子-1","link":"#例子-1","children":[]},{"level":2,"title":"例子 2","slug":"例子-2","link":"#例子-2","children":[]},{"level":2,"title":"例子 3","slug":"例子-3","link":"#例子-3","children":[]}],"git":{"createdTime":1694270512000,"updatedTime":1694270512000,"contributors":[{"name":"stormzhangbx","email":"13128814051@163.com","commits":1}]},"readingTime":{"minutes":0.85,"words":255},"filePathRelative":"basis/typescript/import-require-for-importing-type-only.md","localizedDate":"2023年9月9日","autoDesc":true}');export{e as data};
