import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as a,a as n}from"./app-90f462c1.js";const s={},d=n(`<h1 id="安装、使用" tabindex="-1"><a class="header-anchor" href="#安装、使用" aria-hidden="true">#</a> 安装、使用</h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p><code>npm i pnpm -g</code></p><p>一旦你安装了 pnpm，就无需再使用其他软件包管理器进行升级。 你可以使用 pnpm 升级自己，像这样：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">add</span> <span class="token parameter variable">-g</span> <span class="token function">pnpm</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>例子：</p><p>创建一个目录，然后进入此目录并将其作为当前工作目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token builtin class-name">test</span>
<span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 pnpm init 命令创建一个 package.json 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>给项目安装依赖 express</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">add</span> express
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">CLI 命令</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pnpm install</code></td><td style="text-align:left;">安装项目 package.json 中 dependencies 依赖</td></tr><tr><td style="text-align:left;"><code>pnpm add &lt;pkg&gt;</code></td><td style="text-align:left;">安装某个包</td></tr><tr><td style="text-align:left;"><code>pnpm add &lt;pkg&gt; -D</code></td><td style="text-align:left;">安装某个包，并添加到 package.json 中 devDependencies 属性下</td></tr><tr><td style="text-align:left;"><code>pnpm run &lt;cmd&gt;</code></td><td style="text-align:left;">执行 package.json 中 scripes</td></tr><tr><td style="text-align:left;"><code>pnpm update</code></td><td style="text-align:left;">根据 package.json 中 依赖的语义化版本范围更新所有依赖</td></tr><tr><td style="text-align:left;"><code>pnpm remove &lt;pkg&gt;</code></td><td style="text-align:left;">从 node_modules 和 package.json 中卸载某个依赖</td></tr></tbody></table><p>命令基本跟 npm 一样。</p><p><code>pnpm store path</code> 查看 store 位置</p><p><code>pnpm config set store-dir /path/to/.pnpm-store</code> 设置 store 位置</p>`,17),l=[d];function i(p,c){return t(),a("div",null,l)}const m=e(s,[["render",i],["__file","install.html.vue"]]);export{m as default};
