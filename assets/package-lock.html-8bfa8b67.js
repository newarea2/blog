import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as e,a as o}from"./app-90f462c1.js";const a={},p=o(`<h1 id="package-lock-json" tabindex="-1"><a class="header-anchor" href="#package-lock-json" aria-hidden="true">#</a> package-lock.json</h1><blockquote><p><code>dependencies</code> 是一个对象，对象和 <code>node_modules</code> 中的包结构一一对应，对象的 <code>key</code> 为包名称，值为包的一些描述信息：</p></blockquote><ul><li><code>version</code>：包版本 ------ 这个包当前安装在 <code>node_modules</code> 中的版本</li><li><code>resolved</code>：包具体的安装来源</li><li><code>integrity</code>：包 <code>hash</code> 值，基于 <code>Subresource Integrity</code> 来验证已安装的软件包是否被改动过、是否已失效</li><li><code>requires</code>：对应子依赖的依赖，与子依赖的 <code>package.json</code> 中 <code>dependencies</code>的依赖项相同。</li><li><code>dependencies</code>：结构和外层的 <code>dependencies</code> 结构相同，存储安装在子依赖 <code>node_modules</code> 中的依赖包。</li></ul><p><strong>这里注意，并不是所有的子依赖都有 <code>dependencies</code> 属性，只有子依赖的依赖和当前已安装在根目录的 <code>node_modules</code> 中的依赖冲突之后，才会有这个属性</strong>。</p><p>新建项目 npm A，执行 <code>npm i npm-test-zbx</code></p><p>package.json 中会新增依赖记录</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;npm-test-zbx&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.0.0&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时生成 package-lock.json</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;lockfileVersion&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">&quot;requires&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;npm-test-zbx&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;resolved&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://registry.npmjs.org/npm-test-zbx/-/npm-test-zbx-1.0.0.tgz&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;integrity&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sha512-SK+N7PK+3ah74suLvVaGIR2pDvxFySafer/At4xChbx5i9d3M+v9absig3qiwbQLku7EakcCDwvgaPVwaF3T/A==&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并且 node_modules 中安装了版本号为 1.0.0 的 npm-test-zbx。</p><p>一段时间后库 npm-test-zbx 更新了，版本变成了 1.0.1，在项目 A 中执行 <code>npm i</code>，node_modules 下并不会安装 1.0.1 版本的 npm-test-zbx。因为 package-lock.json 中记录的 npm-test-zbx 版本是 1.0.0，npm 会按照 package-lock.json 去安装依赖。</p><p>package-lock.json 具有“锁版”的作用，<strong>package-lock.json 中描述的依赖树跟 node_modules 实际结构一一对应</strong>。当 package-lock.json、package.json 同时存在，且<strong>两者不冲突</strong>时，执行命令 <code>npm i</code> 会依据 package-lock.json 来生成 node_modules 文件夹。</p><p>冲突的场景：<br><strong>package.json 中记录了库 A，而 package-lock.json 中没有记录库 A</strong></p><p>如果依据 package-lock.json 去生成 node_modules，则 node_modules 中没有库 A，这与 package.json 描述的矛盾</p><p><strong>package-lock.json、package.json 都记录了库 A，package.json 中的版本是 <code>^2.2.1</code>，package-lock.json 中记录的版本是 <code>1.4.3</code></strong></p><p>如果依据 package-lock.json 去生成 node_modules，则 node_modules 中库 A 版本是 <code>1.4.3</code>，这与 package.json 描述的矛盾</p><p><strong>package.json 中没有记录库 A，而 package-lock.json 中有记录库 A</strong></p><p>不能手动修改 package-lock.json 中<code>dependencies</code>、<code>devDependencies</code> 等字段，执行 <code>npm update [库]</code>、<code>npm update 库</code>、<code>npm uninstall 库</code> 等命令会自动修改package-lock.json 文件</p>`,18),c=[p];function t(d,l){return s(),e("div",null,c)}const u=n(a,[["render",t],["__file","package-lock.html.vue"]]);export{u as default};
