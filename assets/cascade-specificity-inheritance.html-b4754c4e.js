import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c,b as n,d as a,f as o,a as l}from"./app-90f462c1.js";const i={},u=n("h1",{id:"css的层叠性、继承性、优先级",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#css的层叠性、继承性、优先级","aria-hidden":"true"},"#"),a(" CSS的层叠性、继承性、优先级")],-1),d={href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance",target:"_blank",rel:"noopener noreferrer"},r=l(`<h2 id="_1-继承性" tabindex="-1"><a class="header-anchor" href="#_1-继承性" aria-hidden="true">#</a> 1 继承性</h2><p>继承性是指指被包在内部的标签将拥有外部标签的样式性，即子元素可以继承父元素的属性。在CSS中以text-、font-、line- 开头的属性都是可以继承的。但是也有以下几个特殊点：</p><ul><li>a 标签的字体颜色不能被继承</li><li>h 标签字体的大下也是不能被继承的</li></ul><p>故a、h标签在common.css文件中会被单独列出<br> 在w3shool学习css时，在介绍每个样式的基本信息时，都有继承性的说明，反映出继承性还是很重要的。如下图：<br><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230725/css三大特性01.png" alt="图1" title="图1" loading="lazy"></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
      <span class="token selector">div</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>国庆节快乐！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 这里，在div中设置color，他的后代元素p中的文字，都被设置为了红色，这就是继承性 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-层叠性" tabindex="-1"><a class="header-anchor" href="#_2-层叠性" aria-hidden="true">#</a> 2 层叠性</h2><p>当同一个元素被两个选择器选中时，CSS会根据选择器的权重决定使用哪一个选择器。权重低的选择器效果会被权重高的选择器效果覆盖（层叠）。</p><h2 id="_3-优先级" tabindex="-1"><a class="header-anchor" href="#_3-优先级" aria-hidden="true">#</a> 3 优先级</h2><p>!important &gt; 行内样式 &gt; id选择器 &gt; 类选择器 &gt; 标签选择器 &gt; 通配符 &gt; 继承</p><h3 id="_3-1-权重" tabindex="-1"><a class="header-anchor" href="#_3-1-权重" aria-hidden="true">#</a> 3.1 权重</h3><p>多个选择器组合以后的优先级<br> 算法：（0，0，0，0） ==&gt; 第一个0是!important的个数，第二个0是id选择器的个数，第三个0是类选择器的个数，第四个0是标签选择器的个数。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#box .imp p</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> // 权重0<span class="token punctuation">,</span>1<span class="token punctuation">,</span>1<span class="token punctuation">,</span>1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div.imp div.imp2 div.imp3 p</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> // 权重0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>3<span class="token punctuation">,</span>4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>0111大于0034，所以选择器<code>#box .imp p</code>权重大于<code>div.imp div.imp2 div.imp3 p</code></p><p>当选择器的权重相同时，会选择声明在后面的选择器，类似于变量赋值。</p>`,15);function k(g,m){const s=e("ExternalLinkIcon");return p(),c("div",null,[u,n("p",null,[n("a",d,[a("Cascade, specificity, and inheritance|MDN"),o(s)])]),r])}const b=t(i,[["render",k],["__file","cascade-specificity-inheritance.html.vue"]]);export{b as default};
