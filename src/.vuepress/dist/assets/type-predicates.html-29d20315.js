import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as r,c as i,a as e,b as t,f as a,d}from"./app-f1b20077.js";const p={},s=e("h1",{id:"类型判断式-type-predicates",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#类型判断式-type-predicates","aria-hidden":"true"},"#"),t(" 类型判断式 type predicates")],-1),g={href:"https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates",target:"_blank",rel:"noopener noreferrer"},l={href:"https://ts.yayujs.com/handbook/Narrowing.html#%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD%E5%BC%8F-type-predicates",target:"_blank",rel:"noopener noreferrer"},f=d('<figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230713/04.png" alt="04" tabindex="0" loading="lazy"><figcaption>04</figcaption></figure><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230713/05.png" alt="05" tabindex="0" loading="lazy"><figcaption>05</figcaption></figure><p>等价于</p><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230713/06.png" alt="06" tabindex="0" loading="lazy"><figcaption>06</figcaption></figure><p>在这个例子中，<code>pet is Fish</code> 就是我们的类型判断式，一个类型判断式采用 <code>parameterName is Type</code>的形式， <code>parameterName</code> 必须是当前函数的参数名，<strong>意思是如果函数返回 <code>true</code>，那么参数 <code>parameterName</code> 类型就是 <code>type</code></strong>。</p><p>类型判断式是类型收窄的一种形式，其他形式还有 typeof 收窄、in 操作符收窄、instanceof 收窄、真值收窄等。</p><h2 id="什么是类型收窄" tabindex="-1"><a class="header-anchor" href="#什么是类型收窄" aria-hidden="true">#</a> 什么是类型收窄</h2><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230713/07.png" alt="07" tabindex="0" loading="lazy"><figcaption>07</figcaption></figure><p>上面例子中，参数 <code>str</code> 的初始类型是由 <code>string</code>、<code>string[]</code>、<code>null</code> 组成的联合类型，经过“操作”后，类型变得更具体、确切。</p>',9);function h(m,u){const o=c("ExternalLinkIcon");return r(),i("div",null,[s,e("p",null,[e("a",g,[t("Using type predicates"),a(o)])]),e("p",null,[e("a",l,[t("类型判断式(type predicates)"),a(o)])]),f])}const b=n(p,[["render",h],["__file","type-predicates.html.vue"]]);export{b as default};
