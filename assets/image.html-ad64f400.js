import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,b as n,d as s,f as e,a as i}from"./app-90f462c1.js";const l={},u=n("h1",{id:"image",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#image","aria-hidden":"true"},"#"),s(" Image()")],-1),r={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLImageElement/Image",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.jianshu.com/p/43172f40347b",target:"_blank",rel:"noopener noreferrer"},k=i(`<p>Image()函数将会创建一个新的<code>HTMLImageElement</code>实例。它的功能等价于<code>document.createElement(&#39;img&#39;)</code></p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><p><code>new Image(width, height)</code>，<code>width</code>表示图片的宽度 (即 width 属性)，<code>height</code>表示图片的高度 (即 height 属性)。</p><p>上面的<code>width</code>、<code>height</code>注意区别<code>naturalWidth</code>、<code>naturalHeight</code>，<code>width</code>、<code>height</code>是值图片显示的宽高，而<code>naturalWidth</code>、<code>naturalHeight</code>是指图片实际的像素大小</p><p>创建一个Image对象：<code>var a=new Image()</code>; 定义Image对象<code>a.src=&#39;xxx.gif&#39;</code>; 此时会通过HTTP请求图片，这样做就相当于给浏览器缓存了一张图片。通过这一措施，当真正需要图像时，它就可以被立即从缓存中取出，从而能够立即显示。</p><p>当出现<code>&lt;img src=&quot;&quot;&gt;</code>和<code>var a=new Image(); a.src=&#39;xxx.gif&#39;</code>时，首先会检测浏览器是否已经缓存过该图片，如果已经缓存，则直接从缓存中获取，如果没有，则发生HTTP请求获取</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><p>border,complete,height,hspace,lowsrc,name,src,vspace,width</p><p>可以通过Image对象的complete 属性来检测图像是否加载完成（每个Image对象都有一个complete属性，当图像处于装载过程中时，该属性值false,当发生了onload、onerror、onabort（图片加载中断时触发）中任何一个事件后，则表示图像装载过程结束（不管成没成功），此时complete属性为true）</p><p>需要注意的是：src 属性一定要写到 onload 的后面，否则程序在 IE 中会出错。</p><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><p>onabort,onerror,onkeydown,onkeypress,onkeyup,onload</p><p>其中最有用的一个肯定是 onLoad事件，它在图像完全载入之后调用。这个事件处理器可以与一个自定义函数联系起来，以在图像完全载入之后执行一些特定的任务。src 属性一定要写到 onload 的后面，否则程序在 IE 中会出错。</p><p>图片预加载</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> modeImgCache <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">12</span>
  <span class="token keyword">var</span> imgs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
  <span class="token keyword">var</span> imgLoaded <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token comment">// 加载单个图片</span>
  <span class="token keyword">function</span> <span class="token function">downloadImage</span> <span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onLoad <span class="token operator">=</span> <span class="token function">validateImages</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;./image/&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;.jpg&#39;</span> <span class="token comment">// 该js文件同级目录image下有0.jpg-12.jpg图片</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 验证是否成功加载完成，如不成功则重新加载</span>
  <span class="token keyword">function</span> <span class="token function">validateImages</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>complete<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// complete为false肯定是没有加载成功，重新加载</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">downloadImage</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>naturalWidth <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>naturalWidth <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// onerror和onabort时，虽然complete为true，但也没有加载成功，重新加载</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">downloadImage</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      imgLoaded<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">preLoadImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">11</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token function">downloadImage</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">preLoadImgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> imgs
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>modeImgCache<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function m(v,g){const a=p("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[s("MDN"),n("a",r,[s("链接"),e(a)])]),n("li",null,[s("(js中图片预载入与Image()类)["),n("a",d,[s("https://www.jianshu.com/p/43172f40347b"),e(a)]),s("]")])]),k])}const f=t(l,[["render",m],["__file","image.html.vue"]]);export{f as default};
