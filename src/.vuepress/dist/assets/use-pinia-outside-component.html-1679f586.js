import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as p,a as n,b as s,f as i,d as c}from"./app-72775176.js";const r={},l=n("h1",{id:"在组件外使用-pina",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在组件外使用-pina","aria-hidden":"true"},"#"),s(" 在组件外使用 Pina")],-1),u={href:"https://pinia.vuejs.org/core-concepts/outside-component-usage.html",target:"_blank",rel:"noopener noreferrer"},d=c(`<p>要想 store (通过 defineStore 定义，一般存放在 store/modules/xx 中)起作用，需要依赖 pinia 实例（通过 createPinia 定义，一般存放在 store/index.ts 中）。</p><p>大部分情况下，在组件中我们都是通过如下方式使用 store。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> useXxxStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store&#39;</span>
  
  <span class="token keyword">const</span> xxxStore <span class="token operator">=</span> <span class="token function">useXxxStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>store 看似和 pinia 实例没有联系，在背后，调用 <code>useXxxStore()</code> 其实注入了 pinia 实例（在 main.ts 中导入的）。</p><p>所以正常的“理解”顺序是：</p><p>main.ts 中导入 pinia 实例 -&gt; 组件中使用 store。</p><p>但 main.ts 中有时会在 pinia 实例导入前使用 store。</p>`,7);function m(k,v){const a=t("ExternalLinkIcon");return o(),p("div",null,[l,n("p",null,[n("a",u,[s("Using a store outside of a component"),i(a)])]),d])}const g=e(r,[["render",m],["__file","use-pinia-outside-component.html.vue"]]);export{g as default};
