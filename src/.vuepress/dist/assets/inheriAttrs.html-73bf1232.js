import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c as o,a as n,b as s,f as c,d as i}from"./app-f1b20077.js";const l={},u=n("h1",{id:"透传",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#透传","aria-hidden":"true"},"#"),s(" 透传")],-1),r={href:"https://cn.vuejs.org/guide/components/attrs.html",target:"_blank",rel:"noopener noreferrer"},d=i(`<h2 id="_1-什么是透传" tabindex="-1"><a class="header-anchor" href="#_1-什么是透传" aria-hidden="true">#</a> 1 什么是透传</h2><p>将<strong>没有被组件声明为 props 或 emits 的 attribute 或者 <code>v-on</code> 事件监听器</strong>传递给组件。</p><p>下面用个例子说明透传具体“长啥样”：</p><p>src/components/test.vue</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> useAttrs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> attrs <span class="token operator">=</span> <span class="token function">useAttrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>attrs<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>src/views/table/index.vue</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name"><span class="token namespace">v-model:</span>age</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Jack<span class="token punctuation">&quot;</span></span> <span class="token attr-name">girl-friend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Marry<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@row-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fn<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
  <span class="token keyword">import</span> Test <span class="token keyword">from</span> <span class="token string">&#39;@/components/test.vue&#39;</span>

  <span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
  <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;row click&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230828/15.png" alt="15" tabindex="0" loading="lazy"><figcaption>15</figcaption></figure><ul><li>和 props 有所不同，透传 attributes 在 JavaScript 中保留了它们原始的大小写</li><li>像 <code>@row-click</code> 这样的一个 <code>v-on</code> 事件监听器将在此对象下被暴露为一个函数 <code>onRowClick</code></li></ul><h2 id="_2-自动透传" tabindex="-1"><a class="header-anchor" href="#_2-自动透传" aria-hidden="true">#</a> 2 自动透传</h2><p>如果组件是单根节点，没有被组件声明为 props 或 emits 的 attribute 或者 <code>v-on</code> 事件监听器会自动传递到组件的根元素/组件上。</p><p>如何禁止自动透传？</p><p>设置 <code>inheriAttrs: false</code>，会禁止上述行为。</p><h2 id="_3-手动透传" tabindex="-1"><a class="header-anchor" href="#_3-手动透传" aria-hidden="true">#</a> 3 手动透传</h2><p>多根节点组件不会自动透传；单根节点组件，如果设置了 <code>inheriAttrs: false</code>，也不会自动透传。对于这两种情况，如果想要使用没有被组件声明为 props 或 emits 的 attribute 或者 <code>v-on</code> 事件监听器，就需要“手动透传”</p><h2 id="_4-如何访问没有被组件声明为-props-或-emits-的-attribute或者-v-on-事件监听器" tabindex="-1"><a class="header-anchor" href="#_4-如何访问没有被组件声明为-props-或-emits-的-attribute或者-v-on-事件监听器" aria-hidden="true">#</a> 4 如何访问没有被组件声明为 props 或 emits 的 attribute或者 <code>v-on</code> 事件监听器</h2><h3 id="_4-1-模板中" tabindex="-1"><a class="header-anchor" href="#_4-1-模板中" aria-hidden="true">#</a> 4.1 模板中</h3><p><code>$attrs</code></p><h3 id="_4-2-javascript-中" tabindex="-1"><a class="header-anchor" href="#_4-2-javascript-中" aria-hidden="true">#</a> 4.2 JavaScript 中</h3><p>选项式 API</p><p><code>this.$attrs</code></p><p>组合式 API</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> useAttrs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

  <span class="token keyword">const</span> attrs <span class="token operator">=</span> <span class="token function">useAttrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不管 <code>inheriAttrs</code> 为 false 还是 true，不影响上面的访问方式，<strong><code>inheriAttrs</code> 只是用来控制单根节点组件是否可以自动透传</strong>。</p><h2 id="_5-注意" tabindex="-1"><a class="header-anchor" href="#_5-注意" aria-hidden="true">#</a> 5 注意</h2><p>在<strong>非单根节点组件</strong>中使用没有<strong>被组件声明为 props 或 emits 的 attribute 或者 v-on 事件监听器</strong>，需要设置 inheritAttrs 为 false，否则控制台报警告，如：</p><p>Extraneous non-props attributes (visible) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.</p><p>不能直接 watch attrs，否则提示 A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> attrs <span class="token operator">=</span> <span class="token function">useAttrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">watch</span><span class="token punctuation">(</span>attrs<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应该这样写：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> attrs <span class="token operator">=</span> <span class="token function">useAttrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> attrs<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31);function k(v,m){const a=e("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[n("a",r,[s("透传 Attributes"),c(a)])]),d])}const b=t(l,[["render",k],["__file","inheriAttrs.html.vue"]]);export{b as default};
