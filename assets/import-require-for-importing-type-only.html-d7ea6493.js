const e=JSON.parse('{"key":"v-a717e6e4","path":"/basic/typescript/import-require-for-importing-type-only.html","title":"import/require 仅仅是导入类型","lang":"zh-CN","frontmatter":{"description":"以下导入语法： 它实际上只做了两件事： 导入 foo 模块的所有类型信息；; 确定 foo 模块运行时的依赖关系。; 你可以选择仅加载类型信息，而没有运行时的依赖关系。 如果你没有把导入的名称当做变量声明空间来用，在编译成 JavaScript 时，导入的模块将会被完全移除。这最好用例子来解释，下面我们将会给出一些示例。 例子 1 将会编译成 Java...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/basic/typescript/import-require-for-importing-type-only.html"}],["meta",{"property":"og:site_name","content":"前端笔记"}],["meta",{"property":"og:title","content":"import/require 仅仅是导入类型"}],["meta",{"property":"og:description","content":"以下导入语法： 它实际上只做了两件事： 导入 foo 模块的所有类型信息；; 确定 foo 模块运行时的依赖关系。; 你可以选择仅加载类型信息，而没有运行时的依赖关系。 如果你没有把导入的名称当做变量声明空间来用，在编译成 JavaScript 时，导入的模块将会被完全移除。这最好用例子来解释，下面我们将会给出一些示例。 例子 1 将会编译成 Java..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-11T10:50:02.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-11T10:50:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"import/require 仅仅是导入类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-11T10:50:02.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"例子 1","slug":"例子-1","link":"#例子-1","children":[]},{"level":2,"title":"例子 2","slug":"例子-2","link":"#例子-2","children":[]},{"level":2,"title":"例子 3","slug":"例子-3","link":"#例子-3","children":[]}],"git":{"createdTime":1699699802000,"updatedTime":1699699802000,"contributors":[{"name":"stormzhangbx","email":"13128814051@163.com","commits":1}]},"readingTime":{"minutes":0.85,"words":255},"filePathRelative":"basic/typescript/import-require-for-importing-type-only.md","localizedDate":"2023年11月11日","autoDesc":true}');export{e as data};
