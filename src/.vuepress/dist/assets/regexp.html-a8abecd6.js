import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as o,a as n,b as s,f as c,d as l}from"./app-72775176.js";const i={},r=n("h1",{id:"正则表达式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#正则表达式","aria-hidden":"true"},"#"),s(" 正则表达式")],-1),u={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-sets",target:"_blank",rel:"noopener noreferrer"},k=l(`<p>之前看到这样一句话，“正则很强大，可惜你不会用”，的确，虽然平时经常使用正则，但常常是copy现成的。有时同一个功能，使用正则可以节省很多代码量，如下面格式化日期的方法，比常规截取字符串再拼接的方法代码简洁很多。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> formatDate <span class="token operator">=</span> <span class="token punctuation">(</span>d<span class="token punctuation">,</span> format <span class="token operator">=</span> <span class="token string">&#39;yyyy-MM-dd HH-mm-ss&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
  <span class="token keyword">const</span> year <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> month <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token comment">// 月份是从0开始的</span>
  <span class="token keyword">const</span> day <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> hour <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> minute <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> second <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;00&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;02&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;03&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;04&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;05&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;06&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;07&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;08&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;09&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> format<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">yyyy</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> year<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">MM</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>month<span class="token punctuation">]</span> <span class="token operator">||</span> month<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">dd</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>day<span class="token punctuation">]</span> <span class="token operator">||</span> day<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">HH</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>hour<span class="token punctuation">]</span> <span class="token operator">||</span> hour<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">mm</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>minute<span class="token punctuation">]</span> <span class="token operator">||</span> minute<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">ss</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>second<span class="token punctuation">]</span> <span class="token operator">||</span> second<span class="token punctuation">)</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正则表达式中特殊字符的含义（重点！）</p><ul><li>字符类别（Character Classes）</li><li>字符集合（Character Sets）</li><li>边界（Boundaries）</li><li>分组（grouping）与反向引用（back references）</li><li>数量词（Quantifiers）</li><li>断言（Assertions）</li></ul>`,4);function d(g,m){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,n("p",null,[s("MDN中关于正则的介绍，"),n("a",u,[s("链接"),c(a)])]),k])}const f=e(i,[["render",d],["__file","regexp.html.vue"]]);export{f as default};
