import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as t,c as r,a as s,b as n,f as a,d as l}from"./app-72775176.js";const c={},i=l(`<h1 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h1><p>配置文件更加灵活、方便，特别是当配置项变多时，配置文件的优势就更加明显。</p><p>rollup.config.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/main.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;cjs&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用配置文件</p><p><code>rollup -c rollup.config.js</code></p><p>或者修改package.json</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;rollup&quot;</span><span class="token operator">:</span> <span class="token string">&quot;rollup -c rollup.config.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：可以使用简写 <code>rollup -c</code>，直接使用 <code>rollup</code> 不会执行打包。</p><p>配置文件 <code>rollup.config.js</code> 通常使用 ES6 模块语法，配置文件在被使用前会被 Rollup 转化为 CommonJS 模块语法（如果要跳过 Rollup 转化，把配置文件后缀改成 <code>.mjs</code> 即可）；也可以直接编写 CommonJS 模块语法的配置文件，但要求配置文件后缀是 <code>.cjs</code>，且 Node 版本 13+。</p><p>结合插件 <code>@rollup/plugin-typescript</code>，也可以使用 TypeScript 书写配置文件：</p><p><code>rollup --config rollup.config.ts --configPlugin typescript</code></p><p>配置文件不会被 bable 处理，所以只能使用 ES2015 特性（除了 <code>export default</code> 语法）。</p>`,13),d={href:"https://rollupjs.org/guide/en/#configuration-files",target:"_blank",rel:"noopener noreferrer"},u={href:"https://rollupjs.org/guide/en/#command-line-flags",target:"_blank",rel:"noopener noreferrer"},k={href:"https://rollupjs.org/guide/en/#big-list-of-options",target:"_blank",rel:"noopener noreferrer"};function m(v,g){const e=p("ExternalLinkIcon");return t(),r("div",null,[i,s("p",null,[n("配置参数"),s("a",d,[n("列表"),a(e)]),n("、"),s("a",u,[n("含义"),a(e)]),n("、"),s("a",k,[n("详情"),a(e)])])])}const _=o(c,[["render",m],["__file","config.html.vue"]]);export{_ as default};
