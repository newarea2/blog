import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as p,a as n,b as s,f as a,d as t}from"./app-f1b20077.js";const i={},d=n("h1",{id:"伪类选择器、伪元素",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#伪类选择器、伪元素","aria-hidden":"true"},"#"),s(" 伪类选择器、伪元素")],-1),r=n("p",null,"参考链接",-1),u={href:"http://www.cnblogs.com/keyi/p/5943133.html",target:"_blank",rel:"noopener noreferrer"},k=t('<blockquote><p>可以类比css中的类，伪类选择器、伪元素也是一种选择器，只是它们书写时比类多一个点</p></blockquote><h2 id="伪类选择器" tabindex="-1"><a class="header-anchor" href="#伪类选择器" aria-hidden="true">#</a> 伪类选择器</h2><p>常见的伪类选择器是与链接相关的选择器，<code>:link</code>、<code>:visited</code>、<code>:hover</code>、<code>:active</code>，以及<code>:focus</code>、<code>:nth-child(n)</code>、<code>:nth-of-type(n)</code>、<code>:target</code>,<code>:not()</code>等</p><p><code>:active</code>大致效果为用鼠标点击时，元素增加特效，鼠标松开时，特效消失。多用在按钮的点击上<br> 当我们需要让点击之后的元素一直拥有某些样式，这时用<code>:active</code>就不行了，因为松开鼠标样式会消失。<code>:focus</code>可以用在<code>&lt;input&gt;</code>标签上</p>',4),m=n("code",null,":target",-1),v={href:"https://github.com/stormzhangbx/front-end-note/blob/master/css/demo/target.html",target:"_blank",rel:"noopener noreferrer"},b=t(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">a:link</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #FF0000<span class="token punctuation">}</span> <span class="token comment">/* 未访问的链接 */</span>
<span class="token selector">a:visited</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #00FF00<span class="token punctuation">}</span> <span class="token comment">/* 已访问的链接 */</span>
<span class="token selector">a:hover</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #FF00FF<span class="token punctuation">}</span> <span class="token comment">/* 鼠标移动到链接上 */</span>
<span class="token selector">a:active</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #0000FF<span class="token punctuation">}</span> <span class="token comment">/* 选定的链接，链接相关伪类选择器简记：love hate*/</span>

<span class="token selector">input[type=&quot;text&quot;]:focus</span> <span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/* 改变获得焦点的文本框的边框样式 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="伪元素" tabindex="-1"><a class="header-anchor" href="#伪元素" aria-hidden="true">#</a> 伪元素</h2><p>常见的伪元素有<code>:before</code>、<code>:after</code>、<code>:first-letter</code>、<code>:first-line</code></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">:before</td><td style="text-align:left;">向元素之前添加内容</td></tr><tr><td style="text-align:left;">:after</td><td style="text-align:left;">在元素之后添加内容</td></tr><tr><td style="text-align:left;">:first-letter</td><td style="text-align:left;">文本的第一个字母添加样式</td></tr><tr><td style="text-align:left;">:first-line</td><td style="text-align:left;">向文本的首行添加特殊样式</td></tr></tbody></table><p><code>:before</code>和<code>:after</code>下特有的content，用于在css渲染中向元素逻辑上的头部或尾部添加内容。这些添加不会出现在DOM中，不会改变文档内容，不可复制，仅仅是在css渲染层加入。所以不要用<code>:before</code>或<code>:after</code>展示有实际意义的内容，尽量使用它们显示修饰性内容，例如图标。<br> 举例：网站有些联系电话，希望在它们前加一个icon☎，就可以使用:before伪元素，如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.phoneNumber:before</span> <span class="token punctuation">{</span>
   <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">&#39;\\260E&#39;</span><span class="token punctuation">;</span>
   <span class="token property">font-size</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>phoneNumber<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>12345645654<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常用例子，如清除浮动</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix:after,
.clearfix:before</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token selector">.clearfix:after</span> <span class="token punctuation">{</span>
  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function h(f,g){const e=c("ExternalLinkIcon");return l(),p("div",null,[d,r,n("ul",null,[n("li",null,[n("a",u,[s("::before和::after伪元素的用法"),a(e)])])]),k,n("p",null,[m,s(" 选择器可用于选取文档当前活动的目标元素。如当页面跳转到某锚点时，该锚点元素就是目标元素。例子"),n("a",v,[s("target.html"),a(e)])]),b])}const y=o(i,[["render",h],["__file","pseudo-element-class.html.vue"]]);export{y as default};
