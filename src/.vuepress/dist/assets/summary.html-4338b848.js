import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as d,c as p,a as r,b as e,f as a,d as o}from"./app-72775176.js";const c={},l=o('<h1 id="组件间通信的方法" tabindex="-1"><a class="header-anchor" href="#组件间通信的方法" aria-hidden="true">#</a> 组件间通信的方法</h1><ul><li>props 和 自定义事件、v-model</li><li><code>ref</code> 和 <code>defineExpore</code></li><li>provide/inject</li><li>全局状态管理 pinia</li><li>作用域插槽</li><li>事件总线 mitt</li></ul>',2),h={href:"https://v3-migration.vuejs.org/breaking-changes/events-api.html#event-bus",target:"_blank",rel:"noopener noreferrer"},s={href:"https://v3.cn.vuejs.org/guide/migration/events-api.html#%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF",target:"_blank",rel:"noopener noreferrer"},_=o('<p>各自的优缺点、使用场景</p><h2 id="_1-props-和-自定义事件、v-model" tabindex="-1"><a class="header-anchor" href="#_1-props-和-自定义事件、v-model" aria-hidden="true">#</a> 1 props 和 自定义事件、v-model</h2><p>适用与父子组件间，父到子使用 props、子到父使用自定义事件、双向绑定 v-model</p><p>优点：简单、直接</p><p>缺点：仅限父子组件间使用，props 使用不当会造成“prop 逐渐透传”</p><h2 id="_2-ref-和-defineexpore" tabindex="-1"><a class="header-anchor" href="#_2-ref-和-defineexpore" aria-hidden="true">#</a> 2 <code>ref</code> 和 <code>defineExpore</code></h2><p>优点：简单直接</p><p>缺点：仅限父子组件间使用</p><h2 id="_3-provide-inject" tabindex="-1"><a class="header-anchor" href="#_3-provide-inject" aria-hidden="true">#</a> 3 provide/inject</h2><p>可以避免“prop 逐渐透传”</p><h2 id="_4-全局状态管理-pinia" tabindex="-1"><a class="header-anchor" href="#_4-全局状态管理-pinia" aria-hidden="true">#</a> 4 全局状态管理 pinia</h2><p>优点：全局的，在任何组件中都可以使用，不限组件层级</p><p>缺点：</p><ul><li>需要增加额外文件；</li><li>由于它的便捷性，可能导致大量定义全局状态，容易埋下潜在的风险与bug</li></ul><h2 id="_5-作用域插槽" tabindex="-1"><a class="header-anchor" href="#_5-作用域插槽" aria-hidden="true">#</a> 5 作用域插槽</h2><p>缺点：</p><ul><li>需要跟模板（DOM）一起使用</li><li>只能传递属性，无法传递方法</li></ul><h2 id="_6-事件总线-mitt" tabindex="-1"><a class="header-anchor" href="#_6-事件总线-mitt" aria-hidden="true">#</a> 6 事件总线 mitt</h2><p>优点：不限组件层级</p><p>缺点：<code>mitter.emit()</code> 算然可以向 <code>mitter.on()</code> 处传递参数，但是无法获知 <code>mitter.on()</code> 中的回调是否执行完毕，对于有些场景不适用</p><p>注意：当相应组件卸载时应即时取消监听</p>',21);function m(f,u){const i=n("ExternalLinkIcon");return d(),p("div",null,[l,r("p",null,[e("Vue 官网（"),r("a",h,[e("新"),a(i)]),e("、"),r("a",s,[e("旧"),a(i)]),e("）其实以上几点已经有总结")]),_])}const b=t(c,[["render",m],["__file","summary.html.vue"]]);export{b as default};
