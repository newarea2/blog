import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as p,a as n,b as o,f as c,d as i}from"./app-72775176.js";const l={},r=i(`<h1 id="dirname-和-的区别" tabindex="-1"><a class="header-anchor" href="#dirname-和-的区别" aria-hidden="true">#</a> __dirname 和 . 的区别</h1><p><code>__dirname</code> 总是指向被执行 js 文件（也就是当前模块）所在<strong>文件夹</strong>的<strong>绝对路径</strong>。<code>__filename</code> 返回当前模块的绝对路径，包含文件名（/dir1/dir2/foo.js）</p><p><code>.</code> 表示当前的<strong>工作目录</strong>。</p><p>假如有如下目录结构</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|-- dir1
    |-- dir2
        |-- foo.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>foo.js 内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;__dirname&#39;</span><span class="token punctuation">,</span> __dirname<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景一</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd /dir1/dir2
node foo.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>__dirname /dir1/dir2
. /dir1/dir2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>场景二</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd /dir1
node dir2/foo.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>__dirname /dir1/dir2
. /dir1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>由此可以看出，不管进到哪层目录下，<code>__dirname</code> 的打印结果都 <strong>一致</strong>，只有进入到被执行 Js 文件所在目录，<code>__dirname</code> 和 <code>.</code> 打印结果才一样。</p><p>例子</p><p>新建 node 项目 fs-extra，安装依赖：<code>npm i fs-extra</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|-- fs-extra
    |-- package-lock.json
    |-- package.json
    |-- src
        |-- emptyDir.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>emptyDir.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">emptyDir</span><span class="token punctuation">(</span><span class="token string">&#39;./foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进入 /e/01-front-end/test/06node/fs-extra，执行 <code>node src/emptyDir.js</code>，会在 /e/01-front-end/test/06node/fs-extra 目录下产生一个新目录 foo。</p><p>假如，进入 /e/01-front-end/test/06node/fs-extra/src，执行 <code>node emptyDir.js</code>，会在 /e/01-front-end/test/06node/fs-extra/src 目录下产生一个新目录 foo。</p><p>如果 emptyDir.js 使用了 <code>__dirname</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">emptyDir</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不管工作目录怎样，都是在 /e/01-front-end/test/06node/fs-extra/src 下产生一个新目录 foo。</p><p>参考：</p>`,27),d={href:"https://nodejs.org/dist/latest-v16.x/docs/api/modules.html#__dirname",target:"_blank",rel:"noopener noreferrer"};function u(k,v){const s=e("ExternalLinkIcon");return t(),p("div",null,[r,n("p",null,[n("a",d,[o("__dirname"),c(s)])])])}const f=a(l,[["render",u],["__file","dirname.html.vue"]]);export{f as default};
