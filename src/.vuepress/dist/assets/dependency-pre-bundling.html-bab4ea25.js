import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,d as t}from"./app-72775176.js";const p={},e=t(`<h1 id="依赖预构建-deps-pre-build" tabindex="-1"><a class="header-anchor" href="#依赖预构建-deps-pre-build" aria-hidden="true">#</a> 依赖预构建 deps pre build</h1><p>用于开发阶段</p><p>预构建哪些依赖</p><h2 id="_1-预构建做了哪些事" tabindex="-1"><a class="header-anchor" href="#_1-预构建做了哪些事" aria-hidden="true">#</a> 1 预构建做了哪些事</h2><h3 id="将使用-commonjs、umd-模块转成-es-模块" tabindex="-1"><a class="header-anchor" href="#将使用-commonjs、umd-模块转成-es-模块" aria-hidden="true">#</a> 将使用 CommonJS、UMD 模块转成 ES 模块</h3><p>Vite 通过 <code>&lt;script type=&quot;module&quot;&gt;</code> 方式在浏览器中使用原生 ES 模块（ESM），所以需要将 CommonJS、UMD 模块转成 ES 模块。</p><p>index.html</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/favicon.ico<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/src/main.ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="将那些具有许多内部模块的-esm-依赖项转换为单个模块" tabindex="-1"><a class="header-anchor" href="#将那些具有许多内部模块的-esm-依赖项转换为单个模块" aria-hidden="true">#</a> 将那些具有许多内部模块的 ESM 依赖项转换为单个模块</h3><p>新建一个普通 Npm 项目 lodash-es-study，其中 index.html 内容如下：</p><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230424/14.png" alt="14" tabindex="0" loading="lazy"><figcaption>14</figcaption></figure><p>预览该页面，发现 Network 下请求了一堆资源：</p><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230424/18.png" alt="18" tabindex="0" loading="lazy"><figcaption>18</figcaption></figure><p>原来是因为 debounce.js 依赖了其他模块（如 toNumber.js），toNumber.js 也依赖了其他模块（如 isObject.js）...</p><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230424/16.png" alt="16" tabindex="0" loading="lazy"><figcaption>16</figcaption></figure><figure><img src="https://blog-1320825986.cos.ap-nanjing.myqcloud.com/20230424/17.png" alt="17" tabindex="0" loading="lazy"><figcaption>17</figcaption></figure><p>如果是 Vite 项目，Vite 预构建会递归查找模块所依赖的资源，并将其打包成一个文件（node_modules/.vite/deps/lodash-es.js），从而减少 Http 请求。</p><h3 id="修改依赖路径" tabindex="-1"><a class="header-anchor" href="#修改依赖路径" aria-hidden="true">#</a> 修改依赖路径</h3><p><code>&lt;script type=&quot;module&quot;&gt;</code> 方式是不支持裸模块（即 &quot;bare import&quot;，如 <code>import debounce from &#39;lodash-es&#39;</code>）引用的，Vite 会将路径改成相对路径导入</p><h2 id="哪些模块会被预构建" tabindex="-1"><a class="header-anchor" href="#哪些模块会被预构建" aria-hidden="true">#</a> 哪些模块会被预构建</h2><p>首先是 package.json 中记录的依赖，其次是项目中有用到或者 Vite 配置文件 <code>optimizeDeps.include</code> 中显式包含的依赖</p><h2 id="缓存、哪些时候会预构建" tabindex="-1"><a class="header-anchor" href="#缓存、哪些时候会预构建" aria-hidden="true">#</a> 缓存、哪些时候会预构建</h2><ul><li>包管理器的锁文件内容，例如 package-lock.json，yarn.lock，pnpm-lock.yaml，或者 bun.lockb；</li><li>补丁文件夹的修改时间；</li><li>vite.config.js 中的相关字段；</li><li>NODE_ENV 的值。</li><li></li></ul><p>只有在上述其中一项发生更改时，才需要重新运行预构建。</p><p>如果出于某些原因你想要强制 Vite 重新构建依赖项，你可以在启动开发服务器时指定 --force 选项，或手动删除 node_modules/.vite 缓存目录。</p><h2 id="如何解决首次进入一个新路由页面加载慢的问题" tabindex="-1"><a class="header-anchor" href="#如何解决首次进入一个新路由页面加载慢的问题" aria-hidden="true">#</a> 如何解决首次进入一个新路由页面加载慢的问题</h2><p><code>npm i -D vite-plugin-optimize-persist vite-plugin-package-config</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// vite.config.ts</span>
<span class="token keyword">import</span> OptimizationPersist <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-optimize-persist&#39;</span>
<span class="token keyword">import</span> PkgConfig <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-package-config&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">PkgConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">OptimizationPersist</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),o=[e];function c(i,l){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","dependency-pre-bundling.html.vue"]]);export{r as default};
