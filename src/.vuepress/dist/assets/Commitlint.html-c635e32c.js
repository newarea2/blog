import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,a as n,b as e,f as s,d as t}from"./app-72775176.js";const d={},r=n("h1",{id:"commitlint",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#commitlint","aria-hidden":"true"},"#"),e(" commitlint")],-1),m={href:"https://commitlint.js.org/#/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://blog.csdn.net/qq_38290251/article/details/111646491",target:"_blank",rel:"noopener noreferrer"},p=t(`<p>当我们运行 git commmit -m &#39;xxx&#39; 时，commitlint 用来检查 xxx 是否满足固定格式的工具。就像 ESLint 是用来检测代码格式的。</p><h2 id="创建一个使用-git-的-node-项目-commitlint-test" tabindex="-1"><a class="header-anchor" href="#创建一个使用-git-的-node-项目-commitlint-test" aria-hidden="true">#</a> 创建一个使用 Git 的 Node 项目 commitlint-test</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> commitlint-test
<span class="token builtin class-name">cd</span> commitlint-test
<span class="token function">npm</span> init <span class="token parameter variable">-y</span>
<span class="token function">git</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装-husky" tabindex="-1"><a class="header-anchor" href="#安装-husky" aria-hidden="true">#</a> 安装 husky</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i husky <span class="token parameter variable">-D</span>
npx husky <span class="token function">install</span>
npx husky <span class="token function">add</span> .husky/commit-msg <span class="token string">&#39;npx --no-install commitlint --edit $1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装-commitlint" tabindex="-1"><a class="header-anchor" href="#安装-commitlint" aria-hidden="true">#</a> 安装 commitlint</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev @commitlint/config-conventional @commitlint/cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>新增配置文件 commitlint.config.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@commitlint/config-conventional&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这里不要使用 <code>echo &quot;module.exports = {extends: [&#39;@commitlint/config-conventional&#39;]};&quot; &gt; commitlint.config.js</code> 来新建配置文件，否则生成的 commitlint.config.js 文件不是 utf8 格式的，使用 commitlint 时会报错：commitlint.config.js:1 SyntaxError: Invalid or unexpected token</p><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>PS E:\\01-front-end\\test\\24husky\\husky-test&gt; git commit -m &quot;foo: this will fail&quot;
⧗   input: foo: this will fail
✖   type must be one of [build, chore, ci, docs, feat, fix, perf, refactor, revert, style, test] [type-enum]

✖   found 1 problems, 0 warnings
ⓘ   Get help: https://github.com/conventional-changelog/commitlint/#what-is-commitlint

husky - commit-msg hook exited with code 1 (error)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 commit 信息符合规范，提交成功，控制台不会打印出任何内容</p><h2 id="提交规范" tabindex="-1"><a class="header-anchor" href="#提交规范" aria-hidden="true">#</a> 提交规范</h2>`,14),h={href:"https://commitlint.js.org/#/concepts-commit-conventions",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>type(scope?): subject
body?
footer?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>type：用于表明我们这次提交的改动类型。</li><li>scope：一个可选的修改范围。用于标识此次提交主要涉及到代码中哪个模块。</li><li>subject：一句话描述此次提交的主要内容，做到言简意赅</li></ul>`,2);function b(g,f){const i=o("ExternalLinkIcon");return l(),c("div",null,[r,n("p",null,[n("a",m,[e("官网"),s(i)])]),n("p",null,[n("a",u,[e("commitlint 使用总结"),s(i)])]),p,n("p",null,[n("a",h,[e("Commit conventions"),s(i)])]),v])}const _=a(d,[["render",b],["__file","Commitlint.html.vue"]]);export{_ as default};
