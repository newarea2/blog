import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as t,c as p,a as n,b as s,f as c,d as l}from"./app-f1b20077.js";const i={},r=n("h1",{id:"模块",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#模块","aria-hidden":"true"},"#"),s(" 模块")],-1),d={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer"},u=l(`<p>一个模块就是一个独立的文件。该文件内部的所有变量，外部无法获取。如果你希望外部能够读取模块内部的某个变量，就必须输出该变量（作为一个接口暴露出去）</p><h2 id="_1-输出" tabindex="-1"><a class="header-anchor" href="#_1-输出" aria-hidden="true">#</a> 1 输出</h2><blockquote><p>通过在模块中使用<code>export</code>、<code>export default</code>来暴露接口</p></blockquote><h3 id="_1-1-export、export-default用法" tabindex="-1"><a class="header-anchor" href="#_1-1-export、export-default用法" aria-hidden="true">#</a> 1.1 export、export default用法</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 模块中可以有多个export, 但最多只能有一个export default</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;Jack&#39;</span> <span class="token comment">// export用法1，直接输出接口，export后直接跟变量声明语句</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;I can run&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// export { name, run } // export用法2，使用大括号指定所要输出的一组变量</span>
<span class="token keyword">const</span> info <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
  <span class="token literal-property property">hobby</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;book&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;music&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;I can read&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vue单文件组件中的export default</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>export default</code>用于指定模块默认输出，因此一个模块中可以有多个<code>export</code>，但最多只能有一个<code>export default</code></p><p>本质上，export default 就是输出一个叫做default的变量或方法，然后输入时系统允许你为它取任意名字。所以，下面的写法是有效的。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// modules.js</span>
<span class="token keyword">function</span> <span class="token function">add</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> y
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> add <span class="token keyword">as</span> <span class="token keyword">default</span> <span class="token punctuation">}</span> <span class="token comment">// 等同于 export default add</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token keyword">default</span> <span class="token keyword">as</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;modules&#39;</span> <span class="token comment">// 等同于 import foo from &#39;modules&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-注意" tabindex="-1"><a class="header-anchor" href="#_1-2-注意" aria-hidden="true">#</a> 1.2 注意</h3><ul><li><p><strong><code>export default</code>后面不能跟变量声明语句</strong></p></li><li><p><code>export default</code>既可用于匿名函数，也可用于非匿名函数，如</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">printMe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;I get called from print.js!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> defualt <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Jack&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Jack&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> defualt foo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>export</code>命令可以出现在模块的任何位置，只要处于模块顶层就可以。如果处于块级作用域内，就会报错，import命令也是如此</p></li></ul><h2 id="_2-输入" tabindex="-1"><a class="header-anchor" href="#_2-输入" aria-hidden="true">#</a> 2 输入</h2><blockquote><p>通过<code>import</code>输入其他模块对外的接口</p></blockquote><h3 id="_2-1-用法" tabindex="-1"><a class="header-anchor" href="#_2-1-用法" aria-hidden="true">#</a> 2.1 用法</h3><ul><li><p>输入通过<code>export</code>输出的接口，如下，其中<code>export1</code>，<code>export2</code>，<code>export3</code>必须与模块module.js中对应的变量名（别名）一样，<strong>即需要知道所要加载的变量名或函数名，否则无法加载</strong><br><code>import { export1, export2, export3 } from &#39;./module.js&#39;</code><br><strong>或者整体加载</strong><br><code>import * as util from &#39;./module.js&#39;</code></p></li><li><p>输入通过<code>export default</code>输出的接口，如下，其中<code>randomName</code>可以随意取名<br><code>import randomName from &#39;./module.js&#39;</code></p></li><li><p>同时输入通过<code>export</code>，<code>export default</code>输出的接口（即一条import语句中，同时输入默认方法和其他接口）， 如下<br><code>import randomName, { export1, export2, export3 } from &#39;./module.js&#39;</code></p></li></ul><p>import 后面的 from 指定模块文件的位置，可以是相对路径，也可以是绝对路径，.js后缀可以省略。如果只是模块名，不带有路径，那么必须有配置文件，告诉 JavaScript 引擎该模块的位置。<br><code>import { myMethod } from &#39;util&#39;</code><br> 上面代码中，util是模块文件名，由于不带有路径，必须通过配置，告诉引擎怎么取到这个模块（<strong>如果使用webpack，其会帮我们做这个工作</strong>）</p>`,17);function k(v,m){const a=o("ExternalLinkIcon");return t(),p("div",null,[r,n("p",null,[n("a",d,[s("MDN"),c(a)])]),u])}const x=e(i,[["render",k],["__file","module.html.vue"]]);export{x as default};
